tabr
tabr
tab$aa_seq[!is.na(tab$aa_seq)]
tab$aa_seq[tab$aa_seq != "NA"]
tabr <- AAStringSet(tab$aa_seq[tab$aa_seq != "NA"])
tabr
names(tabr) <- tab$acc[tab$aa_seq[tab$aa_seq != "NA"]
tab$acc
names(tabr) <- tab$acc[tab$aa_seq != "NA"]
sqs <- readAAStringSet("data/MIBiG_accessions_since_2019.fasta")
tab$acc
mibig <- sqs[grep(paste0(tab$acc, collapse = "|"), names(sqs))]
names(mibig) <- word(names(mibig), sep = "\\|", -1)
pdbs <- readAAStringSet("output/4_new_PDB_struct_seqs.fasta")
names(pdbs) <- paste0(names(pdbs), "_A")
rue <- readAAStringSet("data/Ruegeria_pomeroyi.fasta")
names(rue) <- "WP_011047771.1"
slividans <- readAAStringSet("data/20200420_S_lividans_seqs.fasta")
names(slividans) <- word(names(slividans), sep = " ", 1)
total <- AAStringSet(c(tabr, mibig, rue, pdbs, slividans))
total
dedup <- total[!duplicated(total)]
names(dedup)
sqs <- readAAStringSet("data/MIBiG_accessions_since_2019.fasta")
tab$acc
tab$acc
mibig <- sqs[grep(paste0(tab$acc, collapse = "|"), names(sqs))]
names(mibig) <- word(names(mibig), sep = "\\|", -1)
names(mibig)
sqs <- readAAStringSet("data/MIBiG_accessions_since_2019.fasta")
# Install packages
pacman::p_load("Biostrings", "bio3d", "readxl", "tidyverse", "janitor", "dplyr")
#Set working directory
setwd("~/Documents/Wageningen_UR/github/mibig_training_set_build_test/")
# Read in the table
tab <- read_excel("output/20200421_JBC_MIBiG_validation_set_final.xlsx") %>%
dplyr::slice(1:40)
tabr <- AAStringSet(tab$aa_seq[tab$aa_seq != "NA"])
tabr
names(tabr) <- tab$acc[tab$aa_seq != "NA"]
sqs <- readAAStringSet("data/MIBiG_accessions_since_2019.fasta")
tab$acc
mibig <- sqs[grep(paste0(tab$acc, collapse = "|"), names(sqs))]
names(mibig) <- word(names(mibig), sep = "\\|", -1)
names(mibig)
pdbs <- readAAStringSet("output/4_new_PDB_struct_seqs.fasta")
names(pdbs) <- paste0(names(pdbs), "_A")
rue <- readAAStringSet("data/Ruegeria_pomeroyi.fasta")
names(rue) <- "WP_011047771.1"
slividans <- readAAStringSet("data/20200420_S_lividans_seqs.fasta")
names(slividans) <- word(names(slividans), sep = " ", 1)
total <- AAStringSet(c(tabr, mibig, rue, pdbs, slividans))
total
dedup <- total[!duplicated(total)]
names(dedup)
# Read in the table
tab <- read_excel("output/20200421_JBC_MIBiG_validation_set_final.xlsx") %>%
dplyr::slice(1:40)
tabr <- AAStringSet(tab$aa_seq[tab$aa_seq != "NA"])
tab[1,]
tab$acc
tabr <- AAStringSet(tab$aa_seq[tab$aa_seq != "NA"])
tabr
names(tabr) <- tab$acc[tab$aa_seq != "NA"]
sqs <- readAAStringSet("data/MIBiG_accessions_since_2019.fasta")
tab$acc
mibig <- sqs[grep(paste0(tab$acc, collapse = "|"), names(sqs))]
names(mibig) <- word(names(mibig), sep = "\\|", -1)
names(mibig)
pdbs <- readAAStringSet("output/4_new_PDB_struct_seqs.fasta")
names(pdbs) <- paste0(names(pdbs), "_A")
rue <- readAAStringSet("data/Ruegeria_pomeroyi.fasta")
names(rue) <- "WP_011047771.1"
slividans <- readAAStringSet("data/20200420_S_lividans_seqs.fasta")
names(slividans) <- word(names(slividans), sep = " ", 1)
total <- AAStringSet(c(tabr, mibig, rue, pdbs, slividans))
total
dedup <- total[!duplicated(total)]
names(dedup)
tab$acc
grep("ABU70375.1", names(sqs))
mibig <- sqs[grep(paste0(tab$acc, collapse = "|"), names(sqs))]
names(mibig)
names(mibig) <- word(names(mibig), sep = "\\|", -1)
pdbs <- readAAStringSet("output/4_new_PDB_struct_seqs.fasta")
names(pdbs) <- paste0(names(pdbs), "_A")
rue <- readAAStringSet("data/Ruegeria_pomeroyi.fasta")
names(rue) <- "WP_011047771.1"
slividans <- readAAStringSet("data/20200420_S_lividans_seqs.fasta")
names(slividans) <- word(names(slividans), sep = " ", 1)
total <- AAStringSet(c(tabr, mibig, rue, pdbs, slividans))
total
dedup <- total[!duplicated(total)]
names(dedup)
mibig <- sqs[grep(paste0(tab$acc, collapse = "|"), names(sqs))]
names(mibig)
# Install packages
pacman::p_load("Biostrings", "bio3d", "readxl", "tidyverse", "janitor", "dplyr")
#Set working directory
setwd("~/Documents/Wageningen_UR/github/mibig_training_set_build_test/")
# Read in the table
tab <- read_excel("output/20200421_JBC_MIBiG_validation_set_final.xlsx") %>%
dplyr::slice(1:40)
tab$acc
tabr <- AAStringSet(tab$aa_seq[tab$aa_seq != "NA"])
tabr
names(tabr) <- tab$acc[tab$aa_seq != "NA"]
sqs <- readAAStringSet("data/MIBiG_accessions_since_2019.fasta")
tab$acc
mibig <- sqs[grep(paste0(tab$acc, collapse = "|"), names(sqs))]
names(mibig)
names(mibig) <- word(names(mibig), sep = "\\|", -1)
pdbs <- readAAStringSet("output/4_new_PDB_struct_seqs.fasta")
names(pdbs) <- paste0(names(pdbs), "_A")
rue <- readAAStringSet("data/Ruegeria_pomeroyi.fasta")
names(rue) <- "WP_011047771.1"
slividans <- readAAStringSet("data/20200420_S_lividans_seqs.fasta")
names(slividans) <- word(names(slividans), sep = " ", 1)
total <- AAStringSet(c(tabr, mibig, rue, pdbs, slividans))
total
dedup <- total[!duplicated(total)]
names(dedup)
writeXStringSet(dedup, "output/30_holdout_sequences_for_validation_names_fixed.fasta")
writeXStringSet(dedup, "output/39_holdout_sequences_for_validation_names_fixed.fasta")
sqs <- readAAStringSet("output/full_length_MIBiG_new_BGCs_Adomains_not_extracted.fasta")
tab$acc
# Install packages
pacman::p_load("Biostrings", "bio3d", "readxl", "tidyverse", "janitor", "dplyr")
#Set working directory
setwd("~/Documents/Wageningen_UR/github/mibig_training_set_build_test/")
# Read in the table
tab <- read_excel("output/20200421_JBC_MIBiG_validation_set_final.xlsx") %>%
dplyr::slice(1:40)
tab$acc
tabr <- AAStringSet(tab$aa_seq[tab$aa_seq != "NA"])
tabr
names(tabr) <- tab$acc[tab$aa_seq != "NA"]
sqs <- readAAStringSet("output/full_length_MIBiG_new_BGCs_Adomains_not_extracted.fasta")
tab$acc
mibig <- sqs[grep(paste0(tab$acc, collapse = "|"), names(sqs))]
names(mibig)
names(mibig) <- word(names(mibig), sep = "\\|", -1)
pdbs <- readAAStringSet("output/4_new_PDB_struct_seqs.fasta")
names(pdbs) <- paste0(names(pdbs), "_A")
rue <- readAAStringSet("data/Ruegeria_pomeroyi.fasta")
names(rue) <- "WP_011047771.1"
slividans <- readAAStringSet("data/20200420_S_lividans_seqs.fasta")
names(slividans) <- word(names(slividans), sep = " ", 1)
total <- AAStringSet(c(tabr, mibig, rue, pdbs, slividans))
total
dedup <- total[!duplicated(total)]
names(dedup)
writeXStringSet(dedup, "output/40_holdout_sequences_for_validation_names_fixed.fasta")
# Read in the BLAST hits
#
blast <- read_csv("data/20200421_JBC_MIBiG_validation_set_final.xlsx", col_names = F) %>%
dplyr::filter(!grepl("HOLDOUTTEST|OTHER", X2)) %>%
dplyr::group_by(X1) %>%
dplyr::select(X1, X2, X3) %>%
slice(1)
colnames(blast) <- c("query", "hit", "perc_id")
# Combine with the training set
jbc <- read_excel('output/20200421_JBC_MIBiG_validation_set_final.xlsx') %>%
janitor::clean_names()
jbc$acc[jbc$acc == "D581_RS0125480"] <- "WP_018960015.1"
jbc$acc[jbc$acc == "VIBHAR_01399"] <- "ABU70375.1"
comb <- jbc %>%
dplyr::right_join(blast, ., by = c("query" = "acc"))
colnames(comb)
# Read in the BLAST hits
#
blast <- read_table("blast/40_holdout_max_blast_hits.tsv", col_names = F) %>%
dplyr::filter(!grepl("HOLDOUTTEST|OTHER", X2)) %>%
dplyr::group_by(X1) %>%
dplyr::select(X1, X2, X3) %>%
slice(1)
# Read in the BLAST hits
#
blast <- read.table("blast/40_holdout_max_blast_hits.tsv", col.names = F) %>%
dplyr::filter(!grepl("HOLDOUTTEST|OTHER", X2)) %>%
dplyr::group_by(X1) %>%
dplyr::select(X1, X2, X3) %>%
slice(1)
# Read in the BLAST hits
#
blast <- fread("blast/40_holdout_max_blast_hits.tsv", data.table = F, header = F) %>%
dplyr::filter(!grepl("HOLDOUTTEST|OTHER", X2)) %>%
dplyr::group_by(X1) %>%
dplyr::select(X1, X2, X3) %>%
slice(1)
# Install packages
pacman::p_load("Biostrings", "bio3d", "readxl", "tidyverse",
"janitor", "dplyr", "data.table")
# Read in the BLAST hits
#
blast <- fread("blast/40_holdout_max_blast_hits.tsv", data.table = F, header = F) %>%
dplyr::filter(!grepl("HOLDOUTTEST|OTHER", X2)) %>%
dplyr::group_by(X1) %>%
dplyr::select(X1, X2, X3) %>%
slice(1)
# Read in the BLAST hits
#
blast <- fread("blast/40_holdout_max_blast_hits.tsv", data.table = F, header = F) %
# Read in the BLAST hits
#
blast <- fread("blast/40_holdout_max_blast_hits.tsv", data.table = F, header = F)
colnames(blast)
# Read in the BLAST hits
#
blast <- fread("blast/40_holdout_max_blast_hits.tsv", data.table = F, header = F) %>%
dplyr::filter(!grepl("HOLDOUTTEST|OTHER", V2)) %>%
dplyr::group_by(V1) %>%
dplyr::select(V1, V2, V3) %>%
slice(1)
colnames(blast) <- c("query", "hit", "perc_id")
blast$query
blast
# write_csv(blast, "output/29_hits_with_pid_scores.csv")
setdiff(jbc$acc, blast$query)
# Combine with the training set
jbc <- read_excel('output/20200421_JBC_MIBiG_validation_set_final.xlsx') %>%
janitor::clean_names()
jbc$acc[jbc$acc == "D581_RS0125480"] <- "WP_018960015.1"
jbc$acc[jbc$acc == "VIBHAR_01399"] <- "ABU70375.1"
comb <- jbc %>%
dplyr::right_join(blast, ., by = c("query" = "acc"))
colnames(comb)
combfindf <- comb %>%
dplyr::filter(!is.na(perc_id))
dim(combfindf)
setdiff(jbc$acc, blast$query)
setdiff(blast$query, jbc$acc)
setdiff(jbc$acc, blast$query)
setdiff(blast$query, jbc$acc)
jbc$acc
# Combine with the training set
jbc <- read_excel('output/20200421_JBC_MIBiG_validation_set_final.xlsx') %>%
janitor::clean_names() %>%
dplyr::slice(1:41)
jbc$acc[jbc$acc == "D581_RS0125480"] <- "WP_018960015.1"
jbc$acc[jbc$acc == "VIBHAR_01399"] <- "ABU70375.1"
jbc$acc
setdiff(jbc$acc, blast$query)
setdiff(blast$query, jbc$acc)
# Combine with the training set
jbc <- read_excel('output/20200421_JBC_MIBiG_validation_set_final.xlsx') %>%
janitor::clean_names() %>%
dplyr::slice(1:41)
jbc$acc[jbc$acc == "D581_RS0125480"] <- "WP_018960015.1"
jbc$acc[jbc$acc == "VIBHAR_01399"] <- "ABU70375.1"
jbc$acc
setdiff(jbc$acc, blast$query)
setdiff(blast$query, jbc$acc)
# Combine with the training set
jbc <- read_excel('output/20200421_JBC_MIBiG_validation_set_final.xlsx') %>%
janitor::clean_names() %>%
dplyr::slice(1:40)
jbc$acc[jbc$acc == "D581_RS0125480"] <- "WP_018960015.1"
jbc$acc[jbc$acc == "VIBHAR_01399"] <- "ABU70375.1"
jbc$acc
setdiff(jbc$acc, blast$query)
setdiff(blast$query, jbc$acc)
comb <- jbc %>%
dplyr::right_join(blast, ., by = c("query" = "acc"))
colnames(comb)
combfindf <- comb %>%
dplyr::filter(!is.na(perc_id))
head(combfindf)
View(combfindf)
write_csv(combfindf, "output/40_validation_seqs_for_labmeeting_20200420.csv")
# Read in the BLAST hits
#
blast <- fread("blast/40_holdout_max_blast_hits.tsv", data.table = F, header = F) %>%
dplyr::filter(!grepl("HOLDOUTTEST|OTHER", V2)) %>%
dplyr::group_by(V1) %>%
dplyr::select(V1, V2, V3) %>%
slice(1)
colnames(blast) <- c("query", "hit", "perc_id")
blast
# Read in the BLAST hits
#
blast <- fread("blast/41_holdout_max_blast_hits.tsv", data.table = F, header = F) %>%
dplyr::filter(!grepl("HOLDOUTTEST|OTHER", V2)) %>%
dplyr::group_by(V1) %>%
dplyr::select(V1, V2, V3) %>%
slice(1)
blast$V3
blast$V3
colnames(blast) <- c("query", "hit", "perc_id")
blast
# Combine with the training set
jbc <- read_excel('output/20200421_JBC_MIBiG_validation_set_final.xlsx') %>%
janitor::clean_names() %>%
dplyr::slice(1:40)
jbc$acc[jbc$acc == "D581_RS0125480"] <- "WP_018960015.1"
jbc$acc[jbc$acc == "VIBHAR_01399"] <- "ABU70375.1"
jbc$acc
setdiff(jbc$acc, blast$query)
setdiff(blast$query, jbc$acc)
comb <- jbc %>%
dplyr::right_join(blast, ., by = c("query" = "acc"))
colnames(comb)
combfindf <- comb %>%
dplyr::filter(!is.na(perc_id))
head(combfindf)
View(combfindf)
# Install packages
pacman::p_load("Biostrings", "bio3d", "readxl", "tidyverse",
"janitor", "dplyr", "data.table")
#Set working directory
setwd("~/Documents/Wageningen_UR/github/mibig_training_set_build_test/")
# Read in the table
tab <- read_excel("output/20200421_JBC_MIBiG_validation_set_final.xlsx") %>%
dplyr::slice(1:40)
tab$acc
tabr <- AAStringSet(tab$aa_seq[tab$aa_seq != "NA"])
tabr
names(tabr) <- tab$acc[tab$aa_seq != "NA"]
sqs <- readAAStringSet("output/full_length_MIBiG_new_BGCs_Adomains_not_extracted.fasta")
tab$acc
mibig <- sqs[grep(paste0(tab$acc, collapse = "|"), names(sqs))]
names(mibig)
names(mibig) <- word(names(mibig), sep = "\\|", -1)
pdbs <- readAAStringSet("output/4_new_PDB_struct_seqs.fasta")
names(pdbs) <- paste0(names(pdbs), "_A")
rue <- readAAStringSet("data/Ruegeria_pomeroyi.fasta")
names(rue) <- "WP_011047771.1"
slividans <- readAAStringSet("data/20200420_S_lividans_seqs.fasta")
names(slividans) <- word(names(slividans), sep = " ", 1)
total <- AAStringSet(c(tabr, mibig, rue, pdbs, slividans))
total
dedup <- total[!duplicated(total)]
names(dedup)
writeXStringSet(dedup, "output/40_holdout_sequences_for_validation_names_fixed.fasta")
# Read in the BLAST hits
#
blast <- fread("blast/41_holdout_max_blast_hits.tsv", data.table = F, header = F) %>%
dplyr::filter(!grepl("HOLDOUTTEST|OTHER", V2)) %>%
dplyr::group_by(V1) %>%
dplyr::select(V1, V2, V3) %>%
slice(1)
blast$V3
colnames(blast) <- c("query", "hit", "perc_id")
blast
# write_csv(blast, "output/29_hits_with_pid_scores.csv")
# Combine with the training set
jbc <- read_excel('output/20200421_JBC_MIBiG_validation_set_final.xlsx') %>%
janitor::clean_names() %>%
dplyr::slice(1:40)
jbc$acc[jbc$acc == "D581_RS0125480"] <- "WP_018960015.1"
jbc$acc[jbc$acc == "VIBHAR_01399"] <- "ABU70375.1"
jbc$acc
setdiff(jbc$acc, blast$query)
setdiff(blast$query, jbc$acc)
comb <- jbc %>%
dplyr::right_join(blast, ., by = c("query" = "acc"))
colnames(comb)
combfindf <- comb %>%
dplyr::filter(!is.na(perc_id))
head(combfindf)
# write_csv(combfindf, "output/40_validation_seqs_for_labmeeting_20200420.csv")
# Read in the table
tab <- read_excel("output/20200421_JBC_MIBiG_validation_set_final.xlsx") %>%
dplyr::slice(1:41)
tab$acc
# Read in the table
tab <- read_excel("output/20200421_JBC_MIBiG_validation_set_final.xlsx") %>%
dplyr::slice(1:41)
tab$acc
# Install packages
pacman::p_load("Biostrings", "bio3d", "readxl", "tidyverse",
"janitor", "dplyr", "data.table")
#Set working directory
setwd("~/Documents/Wageningen_UR/github/mibig_training_set_build_test/")
# Read in the table
tab <- read_excel("output/20200421_JBC_MIBiG_validation_set_final.xlsx") %>%
dplyr::slice(1:41)
tab$acc
tabr <- AAStringSet(tab$aa_seq[tab$aa_seq != "NA"])
tabr
names(tabr) <- tab$acc[tab$aa_seq != "NA"]
sqs <- readAAStringSet("output/full_length_MIBiG_new_BGCs_Adomains_not_extracted.fasta")
tab$acc
mibig <- sqs[grep(paste0(tab$acc, collapse = "|"), names(sqs))]
names(mibig)
names(mibig) <- word(names(mibig), sep = "\\|", -1)
pdbs <- readAAStringSet("output/4_new_PDB_struct_seqs.fasta")
names(pdbs) <- paste0(names(pdbs), "_A")
rue <- readAAStringSet("data/Ruegeria_pomeroyi.fasta")
names(rue) <- "WP_011047771.1"
slividans <- readAAStringSet("data/20200420_S_lividans_seqs.fasta")
names(slividans) <- word(names(slividans), sep = " ", 1)
total <- AAStringSet(c(tabr, mibig, rue, pdbs, slividans))
total
dedup <- total[!duplicated(total)]
names(dedup)
writeXStringSet(dedup, "output/40_holdout_sequences_for_validation_names_fixed.fasta")
# Read in the BLAST hits
#
blast <- fread("blast/41_holdout_max_blast_hits.tsv", data.table = F, header = F) %>%
dplyr::filter(!grepl("HOLDOUTTEST|OTHER", V2)) %>%
dplyr::group_by(V1) %>%
dplyr::select(V1, V2, V3) %>%
slice(1)
blast$V3
colnames(blast) <- c("query", "hit", "perc_id")
blast
# write_csv(blast, "output/29_hits_with_pid_scores.csv")
# Combine with the training set
jbc <- read_excel('output/20200421_JBC_MIBiG_validation_set_final.xlsx') %>%
janitor::clean_names() %>%
dplyr::slice(1:40)
jbc$acc[jbc$acc == "D581_RS0125480"] <- "WP_018960015.1"
jbc$acc[jbc$acc == "VIBHAR_01399"] <- "ABU70375.1"
jbc$acc
setdiff(jbc$acc, blast$query)
setdiff(blast$query, jbc$acc)
comb <- jbc %>%
dplyr::right_join(blast, ., by = c("query" = "acc"))
colnames(comb)
combfindf <- comb %>%
dplyr::filter(!is.na(perc_id))
head(combfindf)
# write_csv(combfindf, "output/40_validation_seqs_for_labmeeting_20200420.csv")
length(dedup)
# Read in the BLAST hits
#
blast <- fread("blast/41_holdout_max_blast_hits.tsv", data.table = F, header = F) %>%
dplyr::filter(!grepl("HOLDOUTTEST|OTHER", V2)) %>%
dplyr::group_by(V1) %>%
dplyr::select(V1, V2, V3) %>%
slice(1)
blast$V3
colnames(blast) <- c("query", "hit", "perc_id")
blast
# Combine with the training set
jbc <- read_excel('output/20200421_JBC_MIBiG_validation_set_final.xlsx') %>%
janitor::clean_names() %>%
dplyr::slice(1:40)
jbc$acc[jbc$acc == "D581_RS0125480"] <- "WP_018960015.1"
jbc$acc[jbc$acc == "VIBHAR_01399"] <- "ABU70375.1"
jbc$acc
setdiff(jbc$acc, blast$query)
setdiff(blast$query, jbc$acc)
comb <- jbc %>%
dplyr::right_join(blast, ., by = c("query" = "acc"))
colnames(comb)
combfindf <- comb %>%
dplyr::filter(!is.na(perc_id))
head(combfindf)
jbc$acc
# Read in the BLAST hits
#
blast <- fread("blast/41_holdout_max_blast_hits.tsv", data.table = F, header = F) %>%
dplyr::filter(!grepl("HOLDOUTTEST|OTHER", V2)) %>%
dplyr::group_by(V1) %>%
dplyr::select(V1, V2, V3) %>%
slice(1)
blast$V3
colnames(blast) <- c("query", "hit", "perc_id")
blast
dim(blast)
# Combine with the training set
jbc <- read_excel('output/20200421_JBC_MIBiG_validation_set_final.xlsx') %>%
janitor::clean_names() %>%
dplyr::slice(1:40)
jbc$acc[jbc$acc == "D581_RS0125480"] <- "WP_018960015.1"
jbc$acc[jbc$acc == "VIBHAR_01399"] <- "ABU70375.1"
jbc$acc
setdiff(jbc$acc, blast$query)
setdiff(blast$query, jbc$acc)
# Combine with the training set
jbc <- read_excel('output/20200421_JBC_MIBiG_validation_set_final.xlsx') %>%
janitor::clean_names() %>%
dplyr::slice(1:41)
jbc$acc[jbc$acc == "D581_RS0125480"] <- "WP_018960015.1"
jbc$acc[jbc$acc == "VIBHAR_01399"] <- "ABU70375.1"
jbc$acc
setdiff(jbc$acc, blast$query)
setdiff(blast$query, jbc$acc)
comb <- jbc %>%
dplyr::right_join(blast, ., by = c("query" = "acc"))
colnames(comb)
combfindf <- comb %>%
dplyr::filter(!is.na(perc_id))
head(combfindf)
combfindf <- comb %>%
dplyr::filter(!is.na(perc_id)) %>%
dplyr::filter(perc_id == 100.0)
head(combfindf)
colnames(comb)
head(combfindf)
write_csv(combfindf, "output/40_validation_seqs_for_labmeeting_20200420.csv")
comb <- jbc %>%
dplyr::right_join(blast, ., by = c("query" = "acc"))
colnames(comb)
combfindf <- comb %>%
dplyr::filter(!is.na(perc_id)) %>%
dplyr::filter(perc_id != 100.0) #%>%
# dplyr::select(query, hit, perc_id, true_or_highly_likely_substrates, fc_correct, )
colnames(comb)
head(combfindf)
write_csv(combfindf, "output/40_validation_seqs_for_labmeeting_20200420.csv")
head(combfindf)
combfindf <- comb %>%
dplyr::filter(!is.na(perc_id)) %>%
dplyr::filter(perc_id != 100.0) #%>%
# dplyr::select(query, hit, perc_id, true_or_highly_likely_substrates, fc_correct, )
colnames(comb)
dim(combfindf)
head(combfindf)
write_csv(combfindf, "output/40_validation_seqs_for_labmeeting_20200420.csv")
