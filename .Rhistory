head(dtf10)
# PAM medoids (Partitioning around medoids)
cdat$V3
# PAM medoids (Partitioning around medoids)
rownames(cdat)
pm <- pam(mat, k = 10, metric = "euclidean", stand = FALSE)
dtf10 <- data.frame(rownames(cdat), cdat$V3, pm$clustering)
colnames(dtf10) <- c("full_id", "substrate", "cluster_id")
head(dtf10)
names(pm$clustering)
pm$clusinfo
pm$id.med
pm$clustering
names(pm$clustering)
dtf10 <- data.frame(rownames(cdat), names(pm$clustering),  pm$clustering)
colnames(dtf10) <- c("full_id", "substrate", "cluster_id")
head(dtf10)
dtf15 <- data.frame(rownames(cdat), names(pm$clustering),  pm$clustering)
colnames(dtf15) <- c("full_id", "substrate", "cluster_id")
dtf20 <- data.frame(rownames(cdat), names(pm$clustering),  pm$clustering)
colnames(dtf20) <- c("full_id", "substrate", "cluster_id")
table(dtf20$cluster_id)
dtftabs <- dtf20 %>%
group_by(cluster_id, substrate) %>%
add_count(substrate)
dtftabs
clusterdf <- data.frame(table(dtf20$cluster_id, dtf20$substrate))
clusterfilt <- clusterdf %>%
dplyr::filter(Freq != 0)
table(dtf10$cluster_id)
table(dtf20$cluster_id)
pm <- pam(mat, k = 20, metric = "euclidean", stand = FALSE)
dtf20 <- data.frame(rownames(cdat), names(pm$clustering),  pm$clustering)
colnames(dtf20) <- c("full_id", "substrate", "cluster_id")
table(dtf20$cluster_id)
dtftabs <- dtf10 %>%
group_by(cluster_id, substrate) %>%
add_count(substrate)
dtftabs
dtftabs <- dtf15 %>%
group_by(cluster_id, substrate) %>%
add_count(substrate)
dtftabs
clusterdf <- data.frame(table(dtf20$cluster_id, dtf20$substrate))
clusterfilt <- clusterdf %>%
dplyr::filter(Freq != 0)
table(dtf15$cluster_id)
pm <- pam(mat, k = 15, metric = "euclidean", stand = FALSE)
dtf15 <- data.frame(rownames(cdat), names(pm$clustering),  pm$clustering)
colnames(dtf15) <- c("full_id", "substrate", "cluster_id")
dtftabs <- dtf15 %>%
group_by(cluster_id, substrate) %>%
add_count(substrate)
dtftabs
clusterdf <- data.frame(table(dtf20$cluster_id, dtf20$substrate))
clusterfilt <- clusterdf %>%
dplyr::filter(Freq != 0)
table(dtf15$cluster_id)
cluster_dedup <- clusterfilt %>%
dplyr::arrange(desc(Freq)) %>%
distinct(Var2, .keep_all = T) %>%
dplyr::arrange(Var1)
cluster_dedup
table(dtf15$cluster_id)
clusterdf <- data.frame(table(dtf15$cluster_id, dtf15$substrate))
clusterfilt <- clusterdf %>%
dplyr::filter(Freq != 0)
table(dtf15$cluster_id)
cluster_dedup <- clusterfilt %>%
dplyr::arrange(desc(Freq)) %>%
distinct(Var2, .keep_all = T) %>%
dplyr::arrange(Var1)
cluster_dedup
write_csv(cluster_dedup, "15aa_and_15groups_which_aa_per_cluster_distinct.csv")
pdf("output/15aa_15medoids_cluster_id_matrix.pdf", height = 20, width = 4)
ggplot(clusterdf, aes(Var1, Var2)) +
geom_tile(aes(fill = Freq)) +
geom_text(aes(label = round(Freq, 1))) +
scale_x_discrete(position = "top") +
xlab("Cluster ID #") +
ylab("AA monomer") +
scale_fill_gradient(low = "white", high = "red")
#theme(axis.text.x = element_text(angle = 90))
#axis.title.x = element_blank())
dev.off()
pdf("output/15aa_15medoids_cluster_id_matrix.pdf", height = 20, width = 10)
ggplot(clusterdf, aes(Var1, Var2)) +
geom_tile(aes(fill = Freq)) +
geom_text(aes(label = round(Freq, 1))) +
scale_x_discrete(position = "top") +
xlab("Cluster ID #") +
ylab("AA monomer") +
scale_fill_gradient(low = "white", high = "red")
#theme(axis.text.x = element_text(angle = 90))
#axis.title.x = element_blank())
dev.off()
pdf("output/15aa_15medoids_cluster_id_matrix.pdf", height = 20, width = 8)
ggplot(clusterdf, aes(Var1, Var2)) +
geom_tile(aes(fill = Freq)) +
geom_text(aes(label = round(Freq, 1))) +
scale_x_discrete(position = "top") +
xlab("Cluster ID #") +
ylab("AA monomer") +
scale_fill_gradient(low = "white", high = "red")
#theme(axis.text.x = element_text(angle = 90))
#axis.title.x = element_blank())
dev.off()
pdf("output/15aa_15medoids_cluster_id_matrix.pdf", height = 20, width = 7)
ggplot(clusterdf, aes(Var1, Var2)) +
geom_tile(aes(fill = Freq)) +
geom_text(aes(label = round(Freq, 1))) +
scale_x_discrete(position = "top") +
xlab("Cluster ID #") +
ylab("AA monomer") +
scale_fill_gradient(low = "white", high = "red")
#theme(axis.text.x = element_text(angle = 90))
#axis.title.x = element_blank())
dev.off()
pdf("output/15aa_15medoids_cluster_id_matrix.pdf", height = 20, width = 6)
ggplot(clusterdf, aes(Var1, Var2)) +
geom_tile(aes(fill = Freq)) +
geom_text(aes(label = round(Freq, 1))) +
scale_x_discrete(position = "top") +
xlab("Cluster ID #") +
ylab("AA monomer") +
scale_fill_gradient(low = "white", high = "red")
#theme(axis.text.x = element_text(angle = 90))
#axis.title.x = element_blank())
dev.off()
pdf("output/15aa_15medoids_cluster_id_matrix.pdf", height = 20, width = 7)
ggplot(clusterdf, aes(Var1, Var2)) +
geom_tile(aes(fill = Freq)) +
geom_text(aes(label = round(Freq, 1))) +
scale_x_discrete(position = "top") +
xlab("Cluster ID #") +
ylab("AA monomer") +
scale_fill_gradient(low = "white", high = "red")
#theme(axis.text.x = element_text(angle = 90))
#axis.title.x = element_blank())
dev.off()
pm <- pam(mat, k = 10, metric = "euclidean", stand = FALSE)
dtf10 <- data.frame(rownames(cdat), names(pm$clustering),  pm$clustering)
colnames(dtf10) <- c("full_id", "substrate", "cluster_id")
head(dtf10)
dtftabs <- dtf10 %>%
group_by(cluster_id, substrate) %>%
add_count(substrate)
dtftabs
clusterdf <- data.frame(table(dtf10$cluster_id, dtf10$substrate))
clusterfilt <- clusterdf %>%
dplyr::filter(Freq != 0)
table(dtf10$cluster_id)
cluster_dedup <- clusterfilt %>%
dplyr::arrange(desc(Freq)) %>%
distinct(Var2, .keep_all = T) %>%
dplyr::arrange(Var1)
write_csv(cluster_dedup, "15aa_10groups_which_aa_per_cluster_distinct.csv")
pdf("output/15aa_10medoids_cluster_id_matrix.pdf", height = 20, width = 7)
ggplot(clusterdf, aes(Var1, Var2)) +
geom_tile(aes(fill = Freq)) +
geom_text(aes(label = round(Freq, 1))) +
scale_x_discrete(position = "top") +
xlab("Cluster ID #") +
ylab("AA monomer") +
scale_fill_gradient(low = "white", high = "red")
#theme(axis.text.x = element_text(angle = 90))
#axis.title.x = element_blank())
dev.off()
head(clusterdf)
table(dtf15$cluster_id)
dtftabs <- dtf15 %>%
group_by(cluster_id, substrate) %>%
add_count(substrate)
dtftabs
clusterdf <- data.frame(table(dtf15$cluster_id, dtf15$substrate))
clusterfilt <- clusterdf %>%
dplyr::filter(Freq != 0)
table(dtf15$cluster_id)
cluster_dedup <- clusterfilt %>%
dplyr::arrange(Var1)
write_csv(cluster_dedup, "15aa_15groups_all_included_aa_per_cluster_distinct.csv")
colnames(clusterfilt) <- c("cluster_id", "aa_monomer", "approx_frequency")
colnames(clusterfilt) <- c("cluster_id", "aa_monomer", "approx_frequency")
cluster_dedup <- clusterfilt %>%
group_by(Var1) %>%
arrange(desc(Freq))
colnames(clusterfilt) <- c("cluster_id", "aa_monomer", "frequency")
colnames(clusterfilt) <- c("cluster_id", "aa_monomer", "frequency")
cluster_dedup <- clusterfilt %>%
group_by(cluster_id) %>%
arrange(desc(frequency))
# dplyr::arrange(desc(Freq)) %>%
# distinct(Var2, .keep_all = T) %>%
# dplyr::arrange(Var1)
head(cluster_dedup)
colnames(clusterfilt) <- c("cluster_id", "aa_monomer", "frequency")
cluster_dedup <- clusterfilt %>%
group_by(cluster_id) %>%
do( data.frame(with(data=., .[order(frequency),] )) )
# dplyr::arrange(desc(Freq)) %>%
# distinct(Var2, .keep_all = T) %>%
# dplyr::arrange(Var1)
head(cluster_dedup)
colnames(clusterfilt) <- c("cluster_id", "aa_monomer", "frequency")
cluster_dedup <- clusterfilt %>%
group_by(cluster_id) %>%
do( data.frame(with(data=., .[order(frequency, decreasing = T),] )) )
# dplyr::arrange(desc(Freq)) %>%
# distinct(Var2, .keep_all = T) %>%
# dplyr::arrange(Var1)
head(cluster_dedup)
write_csv(cluster_dedup, "15aa_15groups_all_included_aa_per_cluster_distinct.csv")
dtftabs <- dtf20 %>%
group_by(cluster_id, substrate) %>%
add_count(substrate)
table(dtftabs)
clusterdf <- data.frame(table(dtf20$cluster_id, dtf20$substrate))
table(dtftabs)
dtftabs <- dtf15 %>%
group_by(cluster_id, substrate) %>%
add_count(substrate)
table(dtftabs)
pm <- pam(mat, k = 20, metric = "euclidean", stand = FALSE)
dtf20 <- data.frame(rownames(cdat), names(pm$clustering),  pm$clustering)
colnames(dtf20) <- c("full_id", "substrate", "cluster_id")
table(dtf15$cluster_id)
pm <- pam(mat, k = 20, metric = "euclidean", stand = FALSE)
dtf20 <- data.frame(rownames(cdat), names(pm$clustering),  pm$clustering)
colnames(dtf20) <- c("full_id", "substrate", "cluster_id")
table(dtf20$cluster_id)
pm <- pam(mat, k = 19, metric = "euclidean", stand = FALSE)
dtf20 <- data.frame(rownames(cdat), names(pm$clustering),  pm$clustering)
colnames(dtf20) <- c("full_id", "substrate", "cluster_id")
table(dtf20$cluster_id)
pm <- pam(mat, k = 18, metric = "euclidean", stand = FALSE)
dtf20 <- data.frame(rownames(cdat), names(pm$clustering),  pm$clustering)
colnames(dtf20) <- c("full_id", "substrate", "cluster_id")
table(dtf20$cluster_id)
pm <- pam(mat, k = 17, metric = "euclidean", stand = FALSE)
dtf20 <- data.frame(rownames(cdat), names(pm$clustering),  pm$clustering)
colnames(dtf20) <- c("full_id", "substrate", "cluster_id")
table(dtf20$cluster_id)
pm <- pam(mat, k = 16, metric = "euclidean", stand = FALSE)
dtf20 <- data.frame(rownames(cdat), names(pm$clustering),  pm$clustering)
colnames(dtf20) <- c("full_id", "substrate", "cluster_id")
table(dtf20$cluster_id)
pm <- pam(mat, k = 15, metric = "euclidean", stand = FALSE)
dtf20 <- data.frame(rownames(cdat), names(pm$clustering),  pm$clustering)
colnames(dtf20) <- c("full_id", "substrate", "cluster_id")
table(dtf20$cluster_id)
pm <- pam(mat, k = 16, metric = "euclidean", stand = FALSE)
dtf20 <- data.frame(rownames(cdat), names(pm$clustering),  pm$clustering)
colnames(dtf20) <- c("full_id", "substrate", "cluster_id")
table(dtf20$cluster_id)
pm <- pam(mat, k = 16, metric = "euclidean", stand = FALSE)
dtf16 <- data.frame(rownames(cdat), names(pm$clustering),  pm$clustering)
colnames(dtf16) <- c("full_id", "substrate", "cluster_id")
table(dtf16$cluster_id)
dtftabs <- dtf16 %>%
group_by(cluster_id, substrate) %>%
add_count(substrate)
clusterdf <- data.frame(table(dtf16$cluster_id, dtf16$substrate))
clusterfilt <- clusterdf %>%
dplyr::filter(Freq != 0)
colnames(clusterfilt) <- c("cluster_id", "aa_monomer", "frequency")
cluster_dedup <- clusterfilt %>%
group_by(cluster_id) %>%
do( data.frame(with(data=., .[order(frequency, decreasing = T),] )) )
# dplyr::arrange(desc(Freq)) %>%
# distinct(Var2, .keep_all = T) %>%
# dplyr::arrange(Var1)
head(cluster_dedup)
write_csv(cluster_dedup, "15aa_16groups_all_included_aa_per_cluster_distinct.csv")
pdf("output/15aa_16medoids_cluster_id_matrix.pdf", height = 20, width = 7)
ggplot(clusterdf, aes(Var1, Var2)) +
geom_tile(aes(fill = Freq)) +
geom_text(aes(label = round(Freq, 1))) +
scale_x_discrete(position = "top") +
xlab("Cluster ID #") +
ylab("AA monomer") +
scale_fill_gradient(low = "white", high = "red")
#theme(axis.text.x = element_text(angle = 90))
#axis.title.x = element_blank())
dev.off()
# pm <- pam(mdist, k = 8, metric = "euclidean", stand = FALSE)
# dtf8 <- data.frame(names(pm$clustering), cdat$V3, pm$clustering)
# colnames(dtf8) <- c("full_id", "substrate", "cluster_id")
# write_csv(dtf8, "output/amino_acid_8_clustering.csv")
#
# # PAM medoids (Partitioning around medoids)
# pm <- pam(mdist, k = 9, metric = "euclidean", stand = FALSE)
# dtf9 <- data.frame(names(pm$clustering), cdat$V3, pm$clustering)
# colnames(dtf9) <- c("full_id", "substrate", "cluster_id")
# write_csv(dtf9, "output/amino_acid_9_clustering.csv")
table(dtf15$cluster_id)
# pm <- pam(mdist, k = 8, metric = "euclidean", stand = FALSE)
# dtf8 <- data.frame(names(pm$clustering), cdat$V3, pm$clustering)
# colnames(dtf8) <- c("full_id", "substrate", "cluster_id")
# write_csv(dtf8, "output/amino_acid_8_clustering.csv")
#
# # PAM medoids (Partitioning around medoids)
# pm <- pam(mdist, k = 9, metric = "euclidean", stand = FALSE)
# dtf9 <- data.frame(names(pm$clustering), cdat$V3, pm$clustering)
# colnames(dtf9) <- c("full_id", "substrate", "cluster_id")
# write_csv(dtf9, "output/amino_acid_9_clustering.csv")
table(dtf10$cluster_id)
pm <- pam(mat, k = 15, metric = "euclidean", stand = FALSE)
dtf15 <- data.frame(rownames(cdat), names(pm$clustering),  pm$clustering)
colnames(dtf15) <- c("full_id", "substrate", "cluster_id")
clusterdf <- data.frame(table(dtf15$cluster_id, dtf15$substrate))
clusterfilt <- clusterdf %>%
dplyr::filter(Freq != 0)
head(clusterfilt)
colnames(clusterfilt) <- c("cluster_id", "aa_monomer", "frequency")
cluster_dedup <- clusterfilt %>%
group_by(cluster_id) %>%
do( data.frame(with(data=., .[order(frequency, decreasing = T),] )) )
head(clusterfilt)
cluster_dedup <- clusterfilt %>%
group_by(cluster_id) %>%
do( data.frame(with(data=., .[order(frequency, decreasing = T),] )) ) %>%
spread()
cluster_dedup <- clusterfilt %>%
group_by(cluster_id) %>%
do( data.frame(with(data=., .[order(frequency, decreasing = T),] )) ) %>%
spread(.)
colnames(clusterfilt) <- c("cluster_id", "aa_monomer", "frequency")
cluster_dedup <- clusterfilt %>%
group_by(cluster_id) %>%
do( data.frame(with(data=., .[order(frequency, decreasing = T),] )) ) %>%
spread(., cluster_id, aa_monomer)
colnames(clusterfilt) <- c("cluster_id", "aa_monomer", "frequency")
cluster_dedup <- clusterfilt %>%
group_by(cluster_id) %>%
do( data.frame(with(data=., .[order(frequency, decreasing = T),] )) ) %>%
spread(., cluster_id, aa_monomer, value = frequency)
colnames(clusterfilt) <- c("cluster_id", "aa_monomer", "frequency")
colnames(clusterfilt) <- c("cluster_id", "aa_monomer", "frequency")
cluster_dedup <- clusterfilt %>%
group_by(cluster_id) %>%
do( data.frame(with(data=., .[order(frequency, decreasing = T),] )) ) %>%
spread(., cluster_id, value = frequency)
head(cluster_dedup)
colnames(clusterfilt) <- c("cluster_id", "aa_monomer", "frequency")
clustersort <- clusterfilt %>%
spread(., cluster_id, value = frequency)
head(clustersort)
clusterfilt <- clusterdf #%>%
colnames(clusterfilt) <- c("cluster_id", "aa_monomer", "frequency")
clustersort <- clusterfilt %>%
spread(., cluster_id, value = frequency)
head(clustersort)
rowSums(clustersort)
rowSums(clustersort[,2:15])
head(clustersort)
rowSums(clustersort[,2:15])
rowSums(clustersort[,2:16])
row_sums <- rowSums(clustersort[,2:16])
row_maxs <- max(clustersort[,2:16])
row_masx
row_maxs
row_maxs <- apply(clustersort[,2:16], 2, max)
row_maxs
col_sums <- colSums(clustersort[,2:16])
row_maxs <- apply(clustersort[,2:16], 2, max)
row_maxs
col_sums
col_sums - row_maxs
# Row sums
col_sums <- rowSums(clustersort[,2:16])
# Row sums
row_sums <- rowSums(clustersort[,2:16])
row_sums
row_maxs <- apply(clustersort[,2:16], 1, max)
# Col sums
col_sums <- colSums(clustersort[,2:16])
col_sums
col_maxs <- apply(clustersort[,2:16], 2, max)
col_sums - col_maxs
# Row sums
row_sums <- rowSums(clustersort[,2:16])
row_sums
# Row sums
row_sums <- rowSums(clustersort[,2:16])
row_sums
row_maxs <- apply(clustersort[,2:16], 1, max)
row_sums - row_maxs
# Col sums
col_sums <- colSums(clustersort[,2:16])
col_sums
col_maxs <- apply(clustersort[,2:16], 2, max)
col_sums - col_maxs
col_max
# Row sums
row_sums <- rowSums(clustersort[,2:16])
row_sums
row_maxs <- apply(clustersort[,2:16], 1, max)
row_sums - row_maxs
row_maxs
# Col sums
col_sums <- colSums(clustersort[,2:16])
col_sums
col_maxs <- apply(clustersort[,2:16], 2, max)
col_sums - col_maxs
col_maxs
col_maxs/col_sums
col_maxs/(col_sums-col_maxs)
round(col_maxs/(col_sums-col_maxs), 2)
pm <- pam(mat, k = 14, metric = "euclidean", stand = FALSE)
dtf14 <- data.frame(rownames(cdat), names(pm$clustering),  pm$clustering)
colnames(dtf14) <- c("full_id", "substrate", "cluster_id")
table(dtf14)
table(dtf14$cluster_id)
table(dtf14$cluster_id)
table(dtf15$cluster_id)
pm <- pam(mat, k = 13, metric = "euclidean", stand = FALSE)
dtf14 <- data.frame(rownames(cdat), names(pm$clustering),  pm$clustering)
colnames(dtf14) <- c("full_id", "substrate", "cluster_id")
table(dtf14$cluster_id)
table(dtf15$cluster_id)
pm <- pam(mat, k = 12, metric = "euclidean", stand = FALSE)
dtf14 <- data.frame(rownames(cdat), names(pm$clustering),  pm$clustering)
colnames(dtf14) <- c("full_id", "substrate", "cluster_id")
table(dtf14$cluster_id)
table(dtf15$cluster_id)
pm <- pam(mat, k = 12, metric = "euclidean", stand = FALSE)
dtf12 <- data.frame(rownames(cdat), names(pm$clustering),  pm$clustering)
colnames(dtf12) <- c("full_id", "substrate", "cluster_id")
table(dtf12$cluster_id)
table(dtf15$cluster_id)
# pm <- pam(mdist, k = 8, metric = "euclidean", stand = FALSE)
# dtf8 <- data.frame(names(pm$clustering), cdat$V3, pm$clustering)
# colnames(dtf8) <- c("full_id", "substrate", "cluster_id")
# write_csv(dtf8, "output/amino_acid_8_clustering.csv")
#
# # PAM medoids (Partitioning around medoids)
# pm <- pam(mdist, k = 9, metric = "euclidean", stand = FALSE)
# dtf9 <- data.frame(names(pm$clustering), cdat$V3, pm$clustering)
# colnames(dtf9) <- c("full_id", "substrate", "cluster_id")
# write_csv(dtf9, "output/amino_acid_9_clustering.csv")
table(dtf12$cluster_id)
dtftabs <- dtf12 %>%
group_by(cluster_id, substrate) %>%
add_count(substrate)
clusterdf <- data.frame(table(dtf12$cluster_id, dtf12$substrate))
clusterfilt <- clusterdf #%>%
clusterfilt <- clusterdf %>%
dplyr::filter(Freq != 0)
colnames(clusterfilt) <- c("cluster_id", "aa_monomer", "frequency")
colnames(clusterfilt) <- c("cluster_id", "aa_monomer", "frequency")
cluster_dedup <- clusterfilt %>%
group_by(cluster_id) %>%
do( data.frame(with(data=., .[order(frequency, decreasing = T),] )) ) %>%
spread(., cluster_id, value = frequency)
head(cluster_dedup)
colnames(clusterfilt) <- c("cluster_id", "aa_monomer", "frequency")
cluster_dedup <- clusterfilt %>%
group_by(cluster_id) %>%
do( data.frame(with(data=., .[order(frequency, decreasing = T),] )) )
# spread(., cluster_id, value = frequency)
head(cluster_dedup)
# spread(., cluster_id, value = frequency)
tail(cluster_dedup)
pm <- pam(mat, k = 6, metric = "euclidean", stand = FALSE)
pm <- pam(mat, k = 6, metric = "euclidean", stand = FALSE)
dtf6 <- data.frame(rownames(cdat), names(pm$clustering),  pm$clustering)
colnames(dtf6) <- c("full_id", "substrate", "cluster_id")
table(dtf6$cluster_id)
# pm <- pam(mdist, k = 8, metric = "euclidean", stand = FALSE)
# dtf8 <- data.frame(names(pm$clustering), cdat$V3, pm$clustering)
# colnames(dtf8) <- c("full_id", "substrate", "cluster_id")
# write_csv(dtf8, "output/amino_acid_8_clustering.csv")
#
# # PAM medoids (Partitioning around medoids)
# pm <- pam(mdist, k = 9, metric = "euclidean", stand = FALSE)
# dtf9 <- data.frame(names(pm$clustering), cdat$V3, pm$clustering)
# colnames(dtf9) <- c("full_id", "substrate", "cluster_id")
# write_csv(dtf9, "output/amino_acid_9_clustering.csv")
table(dtf6$cluster_id)
dtftabs <- dtf6 %>%
group_by(cluster_id, substrate) %>%
add_count(substrate)
table(dtftabs)
clusterdf <- data.frame(table(dtf6$cluster_id, dtf12$substrate))
clusterfilt <- clusterdf %>%
dplyr::filter(Freq != 0)
colnames(clusterfilt) <- c("cluster_id", "aa_monomer", "frequency")
pdf("output/15aa_6medoids_cluster_id_matrix.pdf", height = 20, width = 7)
ggplot(clusterdf, aes(Var1, Var2)) +
geom_tile(aes(fill = Freq)) +
geom_text(aes(label = round(Freq, 1))) +
scale_x_discrete(position = "top") +
xlab("Cluster ID #") +
ylab("AA monomer") +
scale_fill_gradient(low = "white", high = "red")
#theme(axis.text.x = element_text(angle = 90))
#axis.title.x = element_blank())
dev.off()
# with(cdat, plot3d(x = x, y = y, z = z,
#                   col = colrs, type = 's', size = 1))
clustdf
# with(cdat, plot3d(x = x, y = y, z = z,
#                   col = colrs, type = 's', size = 1))
clusdf
clusterfilt
dtftabs
grep("iso", dtftabs$substrate)
dtftabs[grep("iso", dtftabs$substrate),]
## Install packages
pacman::p_load('ape', 'dendextend', 'rgl', 'cluster', 'ggrepel', 'plotly', 'tidyverse', 'data.table', 'readxl', 'stringr', 'Biostrings', 'DECIPHER', 'phangorn', 'ggplot2', 'seqinr', 'bgafun')
# Set working directory
setwd("~/Documents/Wageningen_UR/github/mibig_training_set_build_test/")
